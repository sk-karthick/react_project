{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\basic_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isPopupOpen, setPopupOpen] = useState(false);\n  const [segmentName, setSegmentName] = useState('');\n  const [selectedSchema, setSelectedSchema] = useState([]);\n  const [newSchema, setNewSchema] = useState('');\n  const schemaOptions = [{\n    label: 'First Name',\n    value: 'first_name'\n  }, {\n    label: 'Last Name',\n    value: 'last_name'\n  }, {\n    label: 'Gender',\n    value: 'gender'\n  }, {\n    label: 'Age',\n    value: 'age'\n  }, {\n    label: 'Account Name',\n    value: 'account_name'\n  }, {\n    label: 'City',\n    value: 'city'\n  }, {\n    label: 'State',\n    value: 'state'\n  }];\n  const togglePopup = () => {\n    setPopupOpen(!isPopupOpen);\n  };\n  const handleAddSchema = () => {\n    if (newSchema) {\n      setSelectedSchema([...selectedSchema, {\n        label: newSchema,\n        value: newSchema\n      }]);\n      setNewSchema('');\n    }\n  };\n  const handleSaveSegment = () => {\n    const data = {\n      segment_name: segmentName,\n      schema: selectedSchema\n    };\n    // Send data to server\n    console.log(data);\n    // Close the popup after saving\n    togglePopup();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => togglePopup(),\n      children: \"Save segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Segment name\",\n          value: segmentName,\n          onChange: e => setSegmentName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: newSchema,\n          onChange: e => setNewSchema(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Schema --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), schemaOptions.map((schema, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: schema.value,\n            children: schema.label\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddSchema(),\n          children: \"+ Add new schema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blue-box\",\n        children: selectedSchema.map((schema, index) => /*#__PURE__*/_jsxDEV(\"select\", {\n          value: schema.value,\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: schema.value,\n            children: schema.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSaveSegment(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"29DHNW5EN2D1PRd3Bq4N3QauOIc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","isPopupOpen","setPopupOpen","segmentName","setSegmentName","selectedSchema","setSelectedSchema","newSchema","setNewSchema","schemaOptions","label","value","togglePopup","handleAddSchema","handleSaveSegment","data","segment_name","schema","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","e","target","map","index","_c","$RefreshReg$"],"sources":["D:/React/basic_app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst App = () => {\n  const [isPopupOpen, setPopupOpen] = useState(false);\n  const [segmentName, setSegmentName] = useState('');\n  const [selectedSchema, setSelectedSchema] = useState([]);\n  const [newSchema, setNewSchema] = useState('');\n\n  const schemaOptions = [\n    { label: 'First Name', value: 'first_name' },\n    { label: 'Last Name', value: 'last_name' },\n    { label: 'Gender', value: 'gender' },\n    { label: 'Age', value: 'age' },\n    { label: 'Account Name', value: 'account_name' },\n    { label: 'City', value: 'city' },\n    { label: 'State', value: 'state' },\n  ];\n\n  const togglePopup = () => {\n    setPopupOpen(!isPopupOpen);\n  };\n\n  const handleAddSchema = () => {\n    if (newSchema) {\n      setSelectedSchema([...selectedSchema, { label: newSchema, value: newSchema }]);\n      setNewSchema('');\n    }\n  };\n\n  const handleSaveSegment = () => {\n    const data = {\n      segment_name: segmentName,\n      schema: selectedSchema,\n    };\n    // Send data to server\n    console.log(data);\n    // Close the popup after saving\n    togglePopup();\n  };\n\n  return (\n    <div>\n      <button onClick={() => togglePopup()}>Save segment</button>\n      {isPopupOpen && (\n        <div className=\"popup\">\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Segment name\"\n              value={segmentName}\n              onChange={(e) => setSegmentName(e.target.value)}\n            />\n          </div>\n          <div>\n            <select\n              value={newSchema}\n              onChange={(e) => setNewSchema(e.target.value)}\n            >\n              <option value=\"\">-- Select Schema --</option>\n              {schemaOptions.map((schema, index) => (\n                <option key={index} value={schema.value}>{schema.label}</option>\n              ))}\n            </select>\n            <button onClick={() => handleAddSchema()}>+ Add new schema</button>\n          </div>\n          <div className=\"blue-box\">\n            {selectedSchema.map((schema, index) => (\n              <select key={index} value={schema.value}>\n                <option value={schema.value}>{schema.label}</option>\n              </select>\n            ))}\n          </div>\n          <button onClick={() => handleSaveSegment()}>Save</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMa,aAAa,GAAG,CACpB;IAAEC,KAAK,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAa,CAAC,EAC5C;IAAED,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAY,CAAC,EAC1C;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC9B;IAAED,KAAK,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAe,CAAC,EAChD;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAChC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,CACnC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBV,YAAY,CAAC,CAACD,WAAW,CAAC;EAC5B,CAAC;EAED,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIN,SAAS,EAAE;MACbD,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAE;QAAEK,KAAK,EAAEH,SAAS;QAAEI,KAAK,EAAEJ;MAAU,CAAC,CAAC,CAAC;MAC9EC,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;EAED,MAAMM,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,IAAI,GAAG;MACXC,YAAY,EAAEb,WAAW;MACzBc,MAAM,EAAEZ;IACV,CAAC;IACD;IACAa,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACjB;IACAH,WAAW,CAAC,CAAC;EACf,CAAC;EAED,oBACEd,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAQuB,OAAO,EAAEA,CAAA,KAAMT,WAAW,CAAC,CAAE;MAAAQ,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC1DxB,WAAW,iBACVH,OAAA;MAAK4B,SAAS,EAAC,OAAO;MAAAN,QAAA,gBACpBtB,OAAA;QAAAsB,QAAA,eACEtB,OAAA;UACE6B,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,cAAc;UAC1BjB,KAAK,EAAER,WAAY;UACnB0B,QAAQ,EAAGC,CAAC,IAAK1B,cAAc,CAAC0B,CAAC,CAACC,MAAM,CAACpB,KAAK;QAAE;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN3B,OAAA;QAAAsB,QAAA,gBACEtB,OAAA;UACEa,KAAK,EAAEJ,SAAU;UACjBsB,QAAQ,EAAGC,CAAC,IAAKtB,YAAY,CAACsB,CAAC,CAACC,MAAM,CAACpB,KAAK,CAAE;UAAAS,QAAA,gBAE9CtB,OAAA;YAAQa,KAAK,EAAC,EAAE;YAAAS,QAAA,EAAC;UAAmB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAC5ChB,aAAa,CAACuB,GAAG,CAAC,CAACf,MAAM,EAAEgB,KAAK,kBAC/BnC,OAAA;YAAoBa,KAAK,EAAEM,MAAM,CAACN,KAAM;YAAAS,QAAA,EAAEH,MAAM,CAACP;UAAK,GAAzCuB,KAAK;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6C,CAChE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACT3B,OAAA;UAAQuB,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAAC,CAAE;UAAAO,QAAA,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACN3B,OAAA;QAAK4B,SAAS,EAAC,UAAU;QAAAN,QAAA,EACtBf,cAAc,CAAC2B,GAAG,CAAC,CAACf,MAAM,EAAEgB,KAAK,kBAChCnC,OAAA;UAAoBa,KAAK,EAAEM,MAAM,CAACN,KAAM;UAAAS,QAAA,eACtCtB,OAAA;YAAQa,KAAK,EAAEM,MAAM,CAACN,KAAM;YAAAS,QAAA,EAAEH,MAAM,CAACP;UAAK;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC,GADzCQ,KAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN3B,OAAA;QAAQuB,OAAO,EAAEA,CAAA,KAAMP,iBAAiB,CAAC,CAAE;QAAAM,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACzB,EAAA,CA3EID,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AA6ET,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}