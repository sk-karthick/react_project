{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\basic_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isPopupOpen, setPopupOpen] = useState(false);\n  const [segmentName, setSegmentName] = useState('');\n  const [selectedSchema, setSelectedSchema] = useState([{\n    label: 'First Name',\n    value: 'first_name'\n  }, {\n    label: 'Account Name',\n    value: 'account_name'\n  }]);\n  const [newSchemaIndex, setNewSchemaIndex] = useState(0);\n  const schemaOptions = [{\n    label: 'First Name',\n    value: 'first_name'\n  }, {\n    label: 'Last Name',\n    value: 'last_name'\n  }, {\n    label: 'Gender',\n    value: 'gender'\n  }, {\n    label: 'Age',\n    value: 'age'\n  }, {\n    label: 'Account Name',\n    value: 'account_name'\n  }, {\n    label: 'City',\n    value: 'city'\n  }, {\n    label: 'State',\n    value: 'state'\n  }];\n  const togglePopup = () => {\n    setPopupOpen(!isPopupOpen);\n  };\n  const handleAddSchema = () => {\n    if (newSchemaIndex < schemaOptions.length) {\n      const newSchema = schemaOptions[newSchemaIndex];\n      setSelectedSchema([...selectedSchema, newSchema]);\n      setNewSchemaIndex(newSchemaIndex + 1);\n    }\n  };\n  const handleRemoveSchema = index => {\n    const updatedSchema = selectedSchema.filter((schema, i) => i !== index);\n    setSelectedSchema(updatedSchema);\n  };\n  const handleSaveSegment = () => {\n    const data = {\n      segment_name: segmentName,\n      schema: selectedSchema\n    };\n    // Send data to server\n    console.log(data);\n    // Close the popup after saving\n    togglePopup();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => togglePopup(),\n      children: \"Save segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), isPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Segment name\",\n          value: segmentName,\n          onChange: e => setSegmentName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddSchema(),\n          children: \"+ Add new schema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blue-box\",\n        children: selectedSchema.map((schema, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: schema.value,\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: schema.value,\n              children: schema.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveSchema(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSaveSegment(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"9yhtym0OnqjcPWRd4UNxsA5RXyw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","isPopupOpen","setPopupOpen","segmentName","setSegmentName","selectedSchema","setSelectedSchema","label","value","newSchemaIndex","setNewSchemaIndex","schemaOptions","togglePopup","handleAddSchema","length","newSchema","handleRemoveSchema","index","updatedSchema","filter","schema","i","handleSaveSegment","data","segment_name","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","onChange","e","target","map","_c","$RefreshReg$"],"sources":["D:/React/basic_app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst App = () => {\n  const [isPopupOpen, setPopupOpen] = useState(false);\n  const [segmentName, setSegmentName] = useState('');\n  const [selectedSchema, setSelectedSchema] = useState([{ label: 'First Name', value: 'first_name' }, { label: 'Account Name', value: 'account_name' }]);\n  const [newSchemaIndex, setNewSchemaIndex] = useState(0);\n\n  const schemaOptions = [\n    { label: 'First Name', value: 'first_name' },\n    { label: 'Last Name', value: 'last_name' },\n    { label: 'Gender', value: 'gender' },\n    { label: 'Age', value: 'age' },\n    { label: 'Account Name', value: 'account_name' },\n    { label: 'City', value: 'city' },\n    { label: 'State', value: 'state' },\n  ];\n\n  const togglePopup = () => {\n    setPopupOpen(!isPopupOpen);\n  };\n\n  const handleAddSchema = () => {\n    if (newSchemaIndex < schemaOptions.length) {\n      const newSchema = schemaOptions[newSchemaIndex];\n      setSelectedSchema([...selectedSchema, newSchema]);\n      setNewSchemaIndex(newSchemaIndex + 1);\n    }\n  };\n\n  const handleRemoveSchema = (index) => {\n    const updatedSchema = selectedSchema.filter((schema, i) => i !== index);\n    setSelectedSchema(updatedSchema);\n  };\n\n  const handleSaveSegment = () => {\n    const data = {\n      segment_name: segmentName,\n      schema: selectedSchema,\n    };\n    // Send data to server\n    console.log(data);\n    // Close the popup after saving\n    togglePopup();\n  };\n\n  return (\n    <div>\n      <button onClick={() => togglePopup()}>Save segment</button>\n      {isPopupOpen && (\n        <div className=\"popup\">\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Segment name\"\n              value={segmentName}\n              onChange={(e) => setSegmentName(e.target.value)}\n            />\n          </div>\n          <div>\n            <button onClick={() => handleAddSchema()}>+ Add new schema</button>\n          </div>\n          <div className=\"blue-box\">\n            {selectedSchema.map((schema, index) => (\n              <div key={index}>\n                <select value={schema.value}>\n                  <option value={schema.value}>{schema.label}</option>\n                </select>\n                <button onClick={() => handleRemoveSchema(index)}>Remove</button>\n              </div>\n            ))}\n          </div>\n          <button onClick={() => handleSaveSegment()}>Save</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}