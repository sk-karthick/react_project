{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\basic_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isSidebarOpen, setSidebarOpen] = useState(false);\n  const [segmentName, setSegmentName] = useState('');\n  const [selectedSchema, setSelectedSchema] = useState([]);\n  const [newSchemaIndex, setNewSchemaIndex] = useState(0);\n  const schemaOptions = [{\n    label: 'First Name',\n    value: 'first_name'\n  }, {\n    label: 'Last Name',\n    value: 'last_name'\n  }, {\n    label: 'Gender',\n    value: 'gender'\n  }, {\n    label: 'Age',\n    value: 'age'\n  }, {\n    label: 'Account Name',\n    value: 'account_name'\n  }, {\n    label: 'City',\n    value: 'city'\n  }, {\n    label: 'State',\n    value: 'state'\n  }];\n  const toggleSidebar = () => {\n    setSidebarOpen(!isSidebarOpen);\n  };\n  const handleAddSchema = () => {\n    let newSchema = null;\n    if (newSchemaIndex < schemaOptions.length) {\n      newSchema = schemaOptions[newSchemaIndex];\n      if (!selectedSchema.some(schema => schema.label === newSchema.label)) {\n        setSelectedSchema([...selectedSchema, newSchema]);\n      }\n      setNewSchemaIndex(newSchemaIndex + 1);\n    }\n  };\n  const handleRemoveSchema = index => {\n    const updatedSchema = selectedSchema.filter((schema, i) => i !== index);\n    setSelectedSchema(updatedSchema);\n  };\n  const handleSaveSegment = () => {\n    toggleSidebar();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => toggleSidebar(),\n      style: {\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        backgroundColor: '#000'\n      },\n      children: \"Save segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), isSidebarOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      style: {\n        position: 'fixed',\n        top: 0,\n        right: 0,\n        width: '300px',\n        height: '100%',\n        backgroundColor: '#f0f0f0',\n        boxShadow: '0 0 10px rgba(0, 0, 0, 0.2)',\n        padding: '20px',\n        boxSizing: 'border-box'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Segment name\",\n          value: segmentName,\n          onChange: e => setSegmentName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAddSchema(),\n          children: \"+ Add new schema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blue-box\",\n        children: selectedSchema.map((schema, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: schema.value,\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: schema.value,\n              children: schema.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveSchema(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSaveSegment(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"gjqFDOaQb1yuV57ek2vQXNFnIZw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","isSidebarOpen","setSidebarOpen","segmentName","setSegmentName","selectedSchema","setSelectedSchema","newSchemaIndex","setNewSchemaIndex","schemaOptions","label","value","toggleSidebar","handleAddSchema","newSchema","length","some","schema","handleRemoveSchema","index","updatedSchema","filter","i","handleSaveSegment","className","children","onClick","style","position","top","left","transform","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","right","width","height","boxShadow","padding","boxSizing","type","placeholder","onChange","e","target","map","_c","$RefreshReg$"],"sources":["D:/React/basic_app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n\nconst App = () => {\n  const [isSidebarOpen, setSidebarOpen] = useState(false);\n  const [segmentName, setSegmentName] = useState('');\n  const [selectedSchema, setSelectedSchema] = useState([]);\n  const [newSchemaIndex, setNewSchemaIndex] = useState(0);\n\n  const schemaOptions = [\n    { label: 'First Name', value: 'first_name' },\n    { label: 'Last Name', value: 'last_name' },\n    { label: 'Gender', value: 'gender' },\n    { label: 'Age', value: 'age' },\n    { label: 'Account Name', value: 'account_name' },\n    { label: 'City', value: 'city' },\n    { label: 'State', value: 'state' },\n  ];\n\n  const toggleSidebar = () => {\n    setSidebarOpen(!isSidebarOpen);\n  };\n\n  const handleAddSchema = () => {\n    let newSchema = null;\n    if (newSchemaIndex < schemaOptions.length) {\n      newSchema = schemaOptions[newSchemaIndex];\n      if (!selectedSchema.some(schema => schema.label === newSchema.label)) {\n        setSelectedSchema([...selectedSchema, newSchema]);\n      }\n      setNewSchemaIndex(newSchemaIndex + 1);\n    }\n  };\n\n  const handleRemoveSchema = (index) => {\n    const updatedSchema = selectedSchema.filter((schema, i) => i !== index);\n    setSelectedSchema(updatedSchema);\n  };\n\n  const handleSaveSegment = () => {\n    toggleSidebar();\n  };\n\n  return (\n    <div className='main-page'>\n      <button onClick={() => toggleSidebar()} style={{ position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)' ,backgroundColor :'#000'}}>\n        Save segment\n      </button>\n      {isSidebarOpen && (\n        <div className=\"sidebar\" style={{ position: 'fixed', top: 0, right: 0, width: '300px', height: '100%', backgroundColor: '#f0f0f0', boxShadow: '0 0 10px rgba(0, 0, 0, 0.2)', padding: '20px', boxSizing: 'border-box' }}>\n          <div>\n            <input\n              type=\"text\"\n              placeholder=\"Segment name\"\n              value={segmentName}\n              onChange={(e) => setSegmentName(e.target.value)}\n            />\n          </div>\n          <div>\n            <button onClick={() => handleAddSchema()}>+ Add new schema</button>\n          </div>\n          <div className=\"blue-box\">\n            {selectedSchema.map((schema, index) => (\n              <div key={index}>\n                <select value={schema.value}>\n                  <option value={schema.value}>{schema.label}</option>\n                </select>\n                <button onClick={() => handleRemoveSchema(index)}>Remove</button>\n              </div>\n            ))}\n          </div>\n          <button onClick={() => handleSaveSegment()}>Save</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}