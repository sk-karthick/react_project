{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\basic_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [segmentName, setSegmentName] = useState('');\n  const [selectedSchema, setSelectedSchema] = useState([]);\n  const [newSchema, setNewSchema] = useState('');\n  const schemaOptions = [{\n    label: 'First Name',\n    value: 'first_name'\n  }, {\n    label: 'Last Name',\n    value: 'last_name'\n  }, {\n    label: 'Gender',\n    value: 'gender'\n  }, {\n    label: 'Age',\n    value: 'age'\n  }, {\n    label: 'Account Name',\n    value: 'account_name'\n  }, {\n    label: 'City',\n    value: 'city'\n  }, {\n    label: 'State',\n    value: 'state'\n  }];\n  const handleAddSchema = () => {\n    if (newSchema) {\n      setSelectedSchema([...selectedSchema, {\n        label: newSchema,\n        value: newSchema\n      }]);\n      setNewSchema('');\n    }\n  };\n  const handleSaveSegment = () => {\n    const data = {\n      segment_name: segmentName,\n      schema: selectedSchema\n    };\n    // Send data to server\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleSaveSegment(),\n      children: \"Save segment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Segment name\",\n        value: segmentName,\n        onChange: e => setSegmentName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: newSchema,\n        onChange: e => setNewSchema(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Schema --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), schemaOptions.map((schema, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: schema.value,\n          children: schema.label\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddSchema(),\n        children: \"+ Add new schema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"blue-box\",\n      children: selectedSchema.map((schema, index) => /*#__PURE__*/_jsxDEV(\"select\", {\n        value: schema.value,\n        children: /*#__PURE__*/_jsxDEV(\"option\", {\n          value: schema.value,\n          children: schema.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HXBI4eBIN2kN3qY1lCF9bc5T35I=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","segmentName","setSegmentName","selectedSchema","setSelectedSchema","newSchema","setNewSchema","schemaOptions","label","value","handleAddSchema","handleSaveSegment","data","segment_name","schema","console","log","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","map","index","className","_c","$RefreshReg$"],"sources":["D:/React/basic_app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst App = () => {\n  const [segmentName, setSegmentName] = useState('');\n  const [selectedSchema, setSelectedSchema] = useState([]);\n  const [newSchema, setNewSchema] = useState('');\n\n  const schemaOptions = [\n    { label: 'First Name', value: 'first_name' },\n    { label: 'Last Name', value: 'last_name' },\n    { label: 'Gender', value: 'gender' },\n    { label: 'Age', value: 'age' },\n    { label: 'Account Name', value: 'account_name' },\n    { label: 'City', value: 'city' },\n    { label: 'State', value: 'state' },\n  ];\n\n  const handleAddSchema = () => {\n    if (newSchema) {\n      setSelectedSchema([...selectedSchema, { label: newSchema, value: newSchema }]);\n      setNewSchema('');\n    }\n  };\n\n  const handleSaveSegment = () => {\n    const data = {\n      segment_name: segmentName,\n      schema: selectedSchema,\n    };\n    // Send data to server\n    console.log(data);\n  };\n\n  return (\n    <div>\n      <button onClick={() => handleSaveSegment()}>Save segment</button>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Segment name\"\n          value={segmentName}\n          onChange={(e) => setSegmentName(e.target.value)}\n        />\n      </div>\n      <div>\n        <select\n          value={newSchema}\n          onChange={(e) => setNewSchema(e.target.value)}\n        >\n          <option value=\"\">-- Select Schema --</option>\n          {schemaOptions.map((schema, index) => (\n            <option key={index} value={schema.value}>{schema.label}</option>\n          ))}\n        </select>\n        <button onClick={() => handleAddSchema()}>+ Add new schema</button>\n      </div>\n      <div className=\"blue-box\">\n        {selectedSchema.map((schema, index) => (\n          <select key={index} value={schema.value}>\n            <option value={schema.value}>{schema.label}</option>\n          </select>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMW,aAAa,GAAG,CACpB;IAAEC,KAAK,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAa,CAAC,EAC5C;IAAED,KAAK,EAAE,WAAW;IAAEC,KAAK,EAAE;EAAY,CAAC,EAC1C;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,EACpC;IAAED,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC9B;IAAED,KAAK,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAe,CAAC,EAChD;IAAED,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAChC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,CACnC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIL,SAAS,EAAE;MACbD,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAE;QAAEK,KAAK,EAAEH,SAAS;QAAEI,KAAK,EAAEJ;MAAU,CAAC,CAAC,CAAC;MAC9EC,YAAY,CAAC,EAAE,CAAC;IAClB;EACF,CAAC;EAED,MAAMK,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,IAAI,GAAG;MACXC,YAAY,EAAEZ,WAAW;MACzBa,MAAM,EAAEX;IACV,CAAC;IACD;IACAY,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EACnB,CAAC;EAED,oBACEd,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAQoB,OAAO,EAAEA,CAAA,KAAMP,iBAAiB,CAAC,CAAE;MAAAM,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjExB,OAAA;MAAAmB,QAAA,eACEnB,OAAA;QACEyB,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,cAAc;QAC1Bf,KAAK,EAAER,WAAY;QACnBwB,QAAQ,EAAGC,CAAC,IAAKxB,cAAc,CAACwB,CAAC,CAACC,MAAM,CAAClB,KAAK;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNxB,OAAA;MAAAmB,QAAA,gBACEnB,OAAA;QACEW,KAAK,EAAEJ,SAAU;QACjBoB,QAAQ,EAAGC,CAAC,IAAKpB,YAAY,CAACoB,CAAC,CAACC,MAAM,CAAClB,KAAK,CAAE;QAAAQ,QAAA,gBAE9CnB,OAAA;UAAQW,KAAK,EAAC,EAAE;UAAAQ,QAAA,EAAC;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC5Cf,aAAa,CAACqB,GAAG,CAAC,CAACd,MAAM,EAAEe,KAAK,kBAC/B/B,OAAA;UAAoBW,KAAK,EAAEK,MAAM,CAACL,KAAM;UAAAQ,QAAA,EAAEH,MAAM,CAACN;QAAK,GAAzCqB,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6C,CAChE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTxB,OAAA;QAAQoB,OAAO,EAAEA,CAAA,KAAMR,eAAe,CAAC,CAAE;QAAAO,QAAA,EAAC;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CAAC,eACNxB,OAAA;MAAKgC,SAAS,EAAC,UAAU;MAAAb,QAAA,EACtBd,cAAc,CAACyB,GAAG,CAAC,CAACd,MAAM,EAAEe,KAAK,kBAChC/B,OAAA;QAAoBW,KAAK,EAAEK,MAAM,CAACL,KAAM;QAAAQ,QAAA,eACtCnB,OAAA;UAAQW,KAAK,EAAEK,MAAM,CAACL,KAAM;UAAAQ,QAAA,EAAEH,MAAM,CAACN;QAAK;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC,GADzCO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACtB,EAAA,CA/DID,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAiET,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}